plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.edgeviewer'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.edgeviewer"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17 -O2"
            }
        }
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            jniDebuggable true
        }
    }

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.24"
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'org.opencv:opencv-android:4.9.0'
    implementation 'androidx.camera:camera-core:1.3.4'
    implementation 'androidx.camera:camera-camera2:1.3.4'
    implementation 'androidx.camera:camera-lifecycle:1.3.4'
    implementation 'androidx.camera:camera-view:1.3.4'
}
import java.util.Properties
def lp = new Properties()
def lpFile = rootProject.file('local.properties')
if (lpFile.exists()) lp.load(new FileInputStream(lpFile))
def opencvDir = lp.getProperty('opencv.dir')

android {
    defaultConfig {
        externalNativeBuild { cmake { cppFlags "-std=c++17 -O2" } }
        ndk { abiFilters "arm64-v8a", "armeabi-v7a" }  // match Android SDK ABIs
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
            if (opencvDir != null) {
                arguments "-DOpenCV_DIR=${opencvDir}"
            }
        }
    }
}
